{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\santo\\\\Desktop\\\\Web app\\\\Laundry-Scout\\\\Laundry Scout\\\\Laundry-Scout\\\\laundry_scout\\\\laundry-scout-admin\\\\src\\\\Components\\\\Notifications.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { supabase } from \"../Supabase/supabaseClient\";\nimport { FiBell } from \"react-icons/fi\";\nimport \"../Style/Notifications.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Notifications() {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [unread, setUnread] = useState(false);\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  // Fetch all users and businesses on mount\n  useEffect(() => {\n    const fetchAllRegistrations = async () => {\n      try {\n        // Users\n        const {\n          data: users,\n          error: userError\n        } = await supabase.from(\"user_profiles\").select(\"id, username, email, created_at\").order(\"created_at\", {\n          ascending: false\n        });\n        if (userError) throw userError;\n\n        // Business owners\n        const {\n          data: businesses,\n          error: businessError\n        } = await supabase.from(\"business_profiles\").select(\"id, business_name, owner_first_name, owner_last_name, email, created_at\").order(\"created_at\", {\n          ascending: false\n        });\n        if (businessError) throw businessError;\n        let all = [];\n        if (users) {\n          all = [...all, ...users.map(u => ({\n            id: `user-${u.id}`,\n            type: \"user\",\n            message: `New user registered: ${u.username || u.email}`,\n            time: new Date(u.created_at).toLocaleString()\n          }))];\n        }\n        if (businesses) {\n          all = [...all, ...businesses.map(b => ({\n            id: `business-${b.id}`,\n            type: \"business\",\n            message: `New business registered: ${b.business_name} (Owner: ${b.owner_first_name || \"\"} ${b.owner_last_name || \"\"})`,\n            time: new Date(b.created_at).toLocaleString()\n          }))];\n        }\n\n        // Sort newest first\n        all.sort((a, b) => new Date(b.time) - new Date(a.time));\n        setNotifications(all);\n      } catch (err) {\n        console.error(\"Error fetching notifications:\", err.message);\n      }\n    };\n    fetchAllRegistrations();\n\n    // ðŸ”” Subscribe to real-time changes\n    const userSub = supabase.channel(\"user-changes\").on(\"postgres_changes\", {\n      event: \"INSERT\",\n      schema: \"public\",\n      table: \"user_profiles\"\n    }, payload => {\n      const newNotification = {\n        id: `user-${payload.new.id}`,\n        type: \"user\",\n        message: `New user registered: ${payload.new.username || payload.new.email}`,\n        time: new Date(payload.new.created_at).toLocaleString()\n      };\n      setNotifications(prev => [newNotification, ...prev]);\n      setUnread(true);\n    }).subscribe();\n    const businessSub = supabase.channel(\"business-changes\").on(\"postgres_changes\", {\n      event: \"INSERT\",\n      schema: \"public\",\n      table: \"business_profiles\"\n    }, payload => {\n      const newNotification = {\n        id: `business-${payload.new.id}`,\n        type: \"business\",\n        message: `New business registered: ${payload.new.business_name}`,\n        time: new Date(payload.new.created_at).toLocaleString()\n      };\n      setNotifications(prev => [newNotification, ...prev]);\n      setUnread(true);\n    }).subscribe();\n    return () => {\n      supabase.removeChannel(userSub);\n      supabase.removeChannel(businessSub);\n    };\n  }, []);\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = () => setDropdownOpen(false);\n    document.addEventListener(\"click\", handleClickOutside);\n    return () => document.removeEventListener(\"click\", handleClickOutside);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notification-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-bell\",\n      onClick: e => {\n        e.stopPropagation();\n        setDropdownOpen(!dropdownOpen);\n        setUnread(false);\n      },\n      children: [/*#__PURE__*/_jsxDEV(FiBell, {\n        size: 22\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), unread && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"notification-dot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), dropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-dropdown\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-header\",\n        children: \"Notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-empty\",\n        children: \"No registrations yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }, this) : notifications.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-message\",\n          children: note.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-time\",\n          children: note.time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }, this)]\n      }, note.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n_s(Notifications, \"rgcor1pJu3tuKrJozObRmnfVX1o=\");\n_c = Notifications;\nexport default Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["React","useEffect","useState","supabase","FiBell","jsxDEV","_jsxDEV","Notifications","_s","notifications","setNotifications","unread","setUnread","dropdownOpen","setDropdownOpen","fetchAllRegistrations","data","users","error","userError","from","select","order","ascending","businesses","businessError","all","map","u","id","type","message","username","email","time","Date","created_at","toLocaleString","b","business_name","owner_first_name","owner_last_name","sort","a","err","console","userSub","channel","on","event","schema","table","payload","newNotification","new","prev","subscribe","businessSub","removeChannel","handleClickOutside","document","addEventListener","removeEventListener","className","children","onClick","e","stopPropagation","size","fileName","_jsxFileName","lineNumber","columnNumber","length","note","_c","$RefreshReg$"],"sources":["C:/Users/santo/Desktop/Web app/Laundry-Scout/Laundry Scout/Laundry-Scout/laundry_scout/laundry-scout-admin/src/Components/Notifications.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { supabase } from \"../Supabase/supabaseClient\";\r\nimport { FiBell } from \"react-icons/fi\";\r\nimport \"../Style/Notifications.css\";\r\n\r\nfunction Notifications() {\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [unread, setUnread] = useState(false);\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n  // Fetch all users and businesses on mount\r\n  useEffect(() => {\r\n    const fetchAllRegistrations = async () => {\r\n      try {\r\n        // Users\r\n        const { data: users, error: userError } = await supabase\r\n          .from(\"user_profiles\")\r\n          .select(\"id, username, email, created_at\")\r\n          .order(\"created_at\", { ascending: false });\r\n\r\n        if (userError) throw userError;\r\n\r\n        // Business owners\r\n        const { data: businesses, error: businessError } = await supabase\r\n          .from(\"business_profiles\")\r\n          .select(\"id, business_name, owner_first_name, owner_last_name, email, created_at\")\r\n          .order(\"created_at\", { ascending: false });\r\n\r\n        if (businessError) throw businessError;\r\n\r\n        let all = [];\r\n\r\n        if (users) {\r\n          all = [\r\n            ...all,\r\n            ...users.map((u) => ({\r\n              id: `user-${u.id}`,\r\n              type: \"user\",\r\n              message: `New user registered: ${u.username || u.email}`,\r\n              time: new Date(u.created_at).toLocaleString(),\r\n            })),\r\n          ];\r\n        }\r\n\r\n        if (businesses) {\r\n          all = [\r\n            ...all,\r\n            ...businesses.map((b) => ({\r\n              id: `business-${b.id}`,\r\n              type: \"business\",\r\n              message: `New business registered: ${b.business_name} (Owner: ${\r\n                b.owner_first_name || \"\"} ${b.owner_last_name || \"\"})`,\r\n              time: new Date(b.created_at).toLocaleString(),\r\n            })),\r\n          ];\r\n        }\r\n\r\n        // Sort newest first\r\n        all.sort((a, b) => new Date(b.time) - new Date(a.time));\r\n\r\n        setNotifications(all);\r\n      } catch (err) {\r\n        console.error(\"Error fetching notifications:\", err.message);\r\n      }\r\n    };\r\n\r\n    fetchAllRegistrations();\r\n\r\n    // ðŸ”” Subscribe to real-time changes\r\n    const userSub = supabase\r\n      .channel(\"user-changes\")\r\n      .on(\r\n        \"postgres_changes\",\r\n        { event: \"INSERT\", schema: \"public\", table: \"user_profiles\" },\r\n        (payload) => {\r\n          const newNotification = {\r\n            id: `user-${payload.new.id}`,\r\n            type: \"user\",\r\n            message: `New user registered: ${\r\n              payload.new.username || payload.new.email\r\n            }`,\r\n            time: new Date(payload.new.created_at).toLocaleString(),\r\n          };\r\n          setNotifications((prev) => [newNotification, ...prev]);\r\n          setUnread(true);\r\n        }\r\n      )\r\n      .subscribe();\r\n\r\n    const businessSub = supabase\r\n      .channel(\"business-changes\")\r\n      .on(\r\n        \"postgres_changes\",\r\n        { event: \"INSERT\", schema: \"public\", table: \"business_profiles\" },\r\n        (payload) => {\r\n          const newNotification = {\r\n            id: `business-${payload.new.id}`,\r\n            type: \"business\",\r\n            message: `New business registered: ${payload.new.business_name}`,\r\n            time: new Date(payload.new.created_at).toLocaleString(),\r\n          };\r\n          setNotifications((prev) => [newNotification, ...prev]);\r\n          setUnread(true);\r\n        }\r\n      )\r\n      .subscribe();\r\n\r\n    return () => {\r\n      supabase.removeChannel(userSub);\r\n      supabase.removeChannel(businessSub);\r\n    };\r\n  }, []);\r\n\r\n  // Close dropdown when clicking outside\r\n  useEffect(() => {\r\n    const handleClickOutside = () => setDropdownOpen(false);\r\n    document.addEventListener(\"click\", handleClickOutside);\r\n    return () => document.removeEventListener(\"click\", handleClickOutside);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"notification-wrapper\">\r\n      {/* Bell Icon */}\r\n      <div\r\n        className=\"notification-bell\"\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n          setDropdownOpen(!dropdownOpen);\r\n          setUnread(false);\r\n        }}\r\n      >\r\n        <FiBell size={22} />\r\n        {unread && <span className=\"notification-dot\" />}\r\n      </div>\r\n\r\n      {/* Dropdown */}\r\n      {dropdownOpen && (\r\n        <div\r\n          className=\"notification-dropdown\"\r\n          onClick={(e) => e.stopPropagation()}\r\n        >\r\n          <div className=\"dropdown-header\">Notifications</div>\r\n\r\n          {notifications.length === 0 ? (\r\n            <div className=\"dropdown-empty\">No registrations yet</div>\r\n          ) : (\r\n            notifications.map((note) => (\r\n              <div key={note.id} className=\"dropdown-item\">\r\n                <div className=\"note-message\">{note.message}</div>\r\n                <div className=\"note-time\">{note.time}</div>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notifications;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}